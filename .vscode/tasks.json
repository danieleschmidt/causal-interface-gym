{
  // See https://go.microsoft.com/fwlink/?LinkId=733558
  // for the documentation about the tasks.json format
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Install Development Dependencies",
      "type": "shell",
      "command": "pip",
      "args": ["install", "-e", ".[dev,ui]"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Run Tests",
      "type": "shell",
      "command": "pytest",
      "args": [
        "tests/",
        "--cov=causal_interface_gym",
        "--cov-report=html",
        "--cov-report=term-missing",
        "-v"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "python",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "pattern": {
          "regexp": "^(.*):(\\d+):\\s+(.*)",
          "file": 1,
          "line": 2,
          "message": 3
        }
      }
    },
    {
      "label": "Run Linting",
      "type": "shell",
      "command": "ruff",
      "args": ["check", "."],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "ruff",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "pattern": {
          "regexp": "^(.+):(\\d+):(\\d+):\\s+(\\w+):\\s+(.+)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    },
    {
      "label": "Run Type Checking",
      "type": "shell",
      "command": "mypy",
      "args": ["."],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": {
        "owner": "mypy",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "pattern": {
          "regexp": "^(.+):(\\d+):(\\d+):\\s+(error|warning|note):\\s+(.+)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    },
    {
      "label": "Format Code",
      "type": "shell",
      "command": "black",
      "args": ["."],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Security Scan",
      "type": "shell",
      "command": "bandit",
      "args": ["-r", "src/", "-f", "json", "-o", "security-report.json"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Run Benchmarks",
      "type": "shell",
      "command": "pytest",
      "args": [
        "tests/benchmarks/",
        "--benchmark-json=benchmark-results.json",
        "-v"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Validate Causal Accuracy",
      "type": "shell",
      "command": "python",
      "args": ["scripts/validate_causal_accuracy.py"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Build Documentation",
      "type": "shell",
      "command": "make",
      "args": ["docs"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Start Streamlit Demo",
      "type": "shell",
      "command": "streamlit",
      "args": [
        "run",
        "examples/basic_usage.py",
        "--server.port",
        "8501"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "Docker Build",
      "type": "shell",
      "command": "docker",
      "args": [
        "build",
        "-t",
        "causal-interface-gym:latest",
        "."
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Full Quality Check",
      "dependsOrder": "sequence",
      "dependsOn": [
        "Run Linting",
        "Run Type Checking", 
        "Run Tests",
        "Security Scan",
        "Validate Causal Accuracy"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      }
    }
  ]
}