[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "causal-interface-gym"
version = "0.1.0"
description = "Toolkit to embed do-calculus interventions directly into UI prototypes and measure how LLM agents update causal world-models"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Daniel Schmidt", email = "daniel@causal-gym.org"}
]
keywords = ["causal-inference", "llm", "ui", "do-calculus", "causality"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.10"
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.5.0",
    "networkx>=2.8",
    "scipy>=1.9.0",
    "matplotlib>=3.5.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
ui = [
    "streamlit>=1.28.0",
    "plotly>=5.15.0",
    "dash>=2.14.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/causal-interface-gym"
Documentation = "https://causal-interface-gym.readthedocs.io"
Repository = "https://github.com/yourusername/causal-interface-gym.git"
Issues = "https://github.com/yourusername/causal-interface-gym/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py310']

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "W", "C90", "I", "N", "UP", "YTT", "S", "BLE", "FBT", "B", "A", "COM", "DTZ", "EM", "EXE", "FA", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SLOT", "SIM", "TID", "TCH", "INT", "ARG", "PTH", "TD", "FIX", "ERA", "PD", "PGH", "PL", "TRY", "FLY", "NPY", "PERF", "FURB", "LOG", "RUF"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=causal_interface_gym --cov-report=html --cov-report=term-missing"

[tool.coverage.run]
source = ["src/causal_interface_gym"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.bandit]
exclude_dirs = ["tests", "docs", "scripts"]
skips = ["B101", "B601"]

[tool.bandit.assert_used]
skips = ["*_test.py", "*test_*.py"]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["causal_interface_gym"]
known_third_party = [
    "numpy",
    "pandas", 
    "networkx",
    "scipy",
    "matplotlib",
    "pydantic",
    "streamlit",
    "plotly",
    "dash",
]

[tool.pydocstyle]
convention = "google"
inherit = false
ignore = ["D100", "D104", "D213", "D203"]
match = "(?!test_).*\\.py"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
tag_format = "v$version"
version_files = [
    "src/causal_interface_gym/__init__.py:__version__",
    "pyproject.toml:version"
]
bump_message = "release: bump version from $current_version to $new_version"

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
version_variables = [
    "src/causal_interface_gym/__init__.py:__version__"
]
build_command = "pip install build && python -m build"
major_on_zero = false
upload_to_pypi = true
upload_to_release = true
hvcs = "github"